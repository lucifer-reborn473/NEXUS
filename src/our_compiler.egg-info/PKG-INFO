Metadata-Version: 2.4
Name: our_compiler
Version: 0.1.0
Summary: A custom compiler project
Author-email: Balgopal Moharana <moharanabalgopal@iitgn.ac.in>
Requires-Python: >=3.11
Description-Content-Type: text/markdown

# CS 327: Compilers (2025) Project

## Making our own Programming Language & its Compiler

## Basic Syntax

### Operator Precedence Table (Highest to Lowest)

| **Precedence** | **Operator**                           | **Description**                   | **Associativity**                                          |
| -------------------- | -------------------------------------------- | --------------------------------------- | ---------------------------------------------------------------- |
| 1                    | **Numbers**                            | Numeric values (constants or variables) | N/A                                                              |
| 2                    | `()`                                       | Parentheses (for grouping expressions)  | Left-to-Right                                                    |
| 3                    | `**`                                       | Exponentiation                          | Right-to-Left                                                    |
| 4                    | `div_dot`                                  | Floor Division using dot notation       | Left-to-Right                                                    |
| 5                    | `div_slash`                                | Regular Division using slash notation   | Left-to-Right                                                    |
| 6                    | `%`                                        | Modulo (Remainder)                      | Left-to-Right                                                    |
| 7                    | `*`                                        | Multiplication                          | Left-to-Right                                                    |
| 8                    | `-`                                        | Subtraction                             | Left-to-Right                                                    |
| 9                    | `+`                                        | Addition                                | Left-to-Right                                                    |
| 10                   | `<<`, `>>`                               | Bitwise Shift (Left, Right)             | Left-to-Right                                                    |
| 11                   | `<`, `>`, `<=`, `>=`, `==`, `!=` | Comparison Operators                    | Left-to-Right                                                    |
| 12                   | `&`, `^`, `~`                          | Bitwise Operators                       | Left-to-Right                                                    |
| 13                   | `and`, `or`, `not`                     | Logical Operators                       | Left-to-Right (`and`, `or`) `<br>` Right-to-Left (`not`) |

To-implement:

1. Bytecode generation
2. Hash function
3. Documentation
4. Pointers and Garbage collection (not sure)
5. Pre-commit docs
6. Docs make nice
7. User inputs
8. math operations
9. 

### Conditionals

### Loops

#### Scoping

## Data Structures

### Arrays

    - numpy format

### Hashmaps

- similar to pandas (pandas operations)
- Reading and writing files

### Classes / Structs  [To be implemented]

## Bytecode Generation

## Test Coverage

## Benchmarking

    - Show runtime

## Syntax coloring

    - develop extension based file
    - .exe file can be downloaded and configured
    - dockerfile making

Make github.io page
